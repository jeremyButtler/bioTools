
CC=cl.exe
LD=link.exe
coreCFLAGS= /c /O2 /Ot /Za /Tc
CFLAGS=/DNONE
NAME=mapRead.exe
PREFIX="%localAppData%"
O=o.win

genClust=..\genClust
genBio=..\genBio
genAln=..\genAln
genLib=..\genLib

objFiles= \
   $(genAln)\mapRead.$O \
   $(genBio)\rmHomo.$O \
   $(genBio)\gzSeqST.$O \
   $(genAln)\needle.$O \
   $(genAln)\dirMatrix.$O \
   $(genAln)\alnSet.$O \
   $(genLib)\base10str.$O \
   $(genLib)\fileFun.$O \
   $(genLib)\ulCp.$O \
   $(genAln)\indexToCoord.$O \
   $(genBio)\samEntry.$O \
   $(genLib)\strAry.$O \
   $(genLib)\numToStr.$O \
   $(genBio)\seqST.$O \
   $(genLib)\charCp.$O \
   $(genAln)\water.$O \
   $(genBio)\kmerFun.$O \
   $(genLib)\shellSort.$O \
   $(genLib)\inflate.$O \
   $(genLib)\checkSum.$O \
   $(genLib)\endin.$O \
   $(genLib)\genMath.$O \
   mainMapRead.$O

$(NAME): mainMapRead.$O
	$(LD) /out:$(NAME) $(objFiles)

mainMapRead.$O: \
	mainMapRead.c \
	$(genAln)\mapRead.$O \
	$(genBio)\rmHomo.$O \
	$(genBio)\gzSeqST.$O \
	../bioTools.h \
	../genLib/endLine.h
		$(CC) /Fo:mainMapRead.$O \
			$(CFLAGS) $(coreCFLAGS) mainMapRead.c

$(genAln)\mapRead.$O: \
	$(genAln)\mapRead.c \
	$(genAln)\mapRead.h \
	$(genAln)\needle.$O \
	$(genAln)\water.$O \
	$(genAln)\dirMatrix.$O \
	$(genBio)\kmerFun.$O \
	$(genLib)\shellSort.$O \
	$(genAln)\defsMapRead.h  \
	$(genLib)\genMath.h
	 	$(CC) /Fo:$(genAln)\mapRead.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genAln)\mapRead.c

$(genBio)\rmHomo.$O: \
	$(genBio)\rmHomo.c \
	$(genBio)\rmHomo.h \
	$(genBio)\samEntry.$O \
	$(genBio)\seqST.$O
		$(CC) /Fo:$(genBio)\rmHomo.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genBio)\rmHomo.c

$(genBio)\gzSeqST.$O: \
	$(genBio)\gzSeqST.c \
	$(genBio)\gzSeqST.h \
	$(genBio)\seqST.$O \
 	$(genLib)\inflate.$O
		$(CC) /Fo:$(genBio)\gzSeqST.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genBio)\gzSeqST.c

$(genAln)\needle.$O: \
	$(genAln)\needle.c \
	$(genAln)\dirMatrix.$O \
	$(genLib)\genMath.h
		$(CC) /Fo:$(genAln)\needle.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genAln)\needle.c

$(genAln)\dirMatrix.$O: \
	$(genAln)\dirMatrix.c \
	$(genAln)\alnSet.$O \
	$(genAln)\indexToCoord.$O \
	$(genBio)\samEntry.$O \
	$(genBio)\seqST.$O \
	$(genLib)\charCp.$O
		$(CC) /Fo:$(genAln)\dirMatrix.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genAln)\dirMatrix.c

$(genAln)\alnSet.$O: \
	$(genAln)\alnSet.c \
	$(genAln)\alnDefs.h \
	$(genLib)\fileFun.$O \
	$(genLib)\ulCp.$O \
	$(genLib)\base10str.$O \
	$(genAln)\alnDefs.h \
	$(genLib)\endLine.h
		$(CC) /Fo:$(genAln)\alnSet.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genAln)\alnSet.c

$(genLib)\base10str.$O: \
	$(genLib)\base10str.c \
	$(genLib)\base10str.h
		$(CC) /Fo:$(genLib)\base10str.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\base10str.c

$(genLib)\fileFun.$O: \
	$(genLib)\fileFun.c \
	$(genLib)\fileFun.h \
	$(genLib)\ulCp.$O
		$(CC) /Fo:$(genLib)\fileFun.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\fileFun.c

$(genLib)\ulCp.$O: \
	$(genLib)\ulCp.c \
	$(genLib)\ulCp.h
		$(CC) /Fo:$(genLib)\ulCp.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\ulCp.c

$(genAln)\indexToCoord.$O: \
	$(genAln)\indexToCoord.c \
	$(genAln)\indexToCoord.h
		$(CC) /Fo:$(genAln)\indexToCoord.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genAln)\indexToCoord.c

$(genBio)\samEntry.$O: \
	$(genBio)\samEntry.c 	$(genBio)\samEntry.h \
	$(genLib)\fileFun.$O \
	$(genLib)\strAry.$O \
	$(genLib)\base10str.$O \
	$(genLib)\numToStr.$O \
	$(genBio)\ntTo5Bit.h \
	$(genLib)\endLine.h
		$(CC) /Fo:$(genBio)\samEntry.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genBio)\samEntry.c

$(genLib)\strAry.$O: \
	$(genLib)\strAry.c \
	$(genLib)\strAry.h \
	$(genLib)\ulCp.$O
		$(CC) /Fo:$(genLib)\strAry.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\strAry.c

$(genLib)\numToStr.$O: \
	$(genLib)\numToStr.c \
	$(genLib)\numToStr.h
		$(CC) /Fo:$(genLib)\numToStr.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\numToStr.c

$(genBio)\seqST.$O: \
	$(genBio)\seqST.c \
	$(genBio)\seqST.h \
	$(genLib)\fileFun.$O
		$(CC) /Fo:$(genBio)\seqST.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genBio)\seqST.c

$(genLib)\charCp.$O: \
	$(genLib)\charCp.c \
	$(genLib)\charCp.h
		$(CC) /Fo:$(genLib)\charCp.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\charCp.c

$(genAln)\water.$O: $(genAln)\water.c \
	$(genAln)\dirMatrix.$O \
	$(genLib)\genMath.h
		$(CC) /Fo:$(genAln)\water.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genAln)\water.c

$(genBio)\kmerFun.$O: \
	$(genBio)\kmerFun.c \
	$(genBio)\kmerFun.h \
	$(genBio)\kmerBit.h
		$(CC) /Fo:$(genBio)\kmerFun.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genBio)\kmerFun.c

$(genLib)\shellSort.$O: \
	$(genLib)\shellSort.c \
	$(genLib)\shellSort.h
		$(CC) /Fo:$(genLib)\shellSort.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\shellSort.c

$(genLib)\inflate.$O: \
	$(genLib)\inflate.c \
	$(genLib)\inflate.h \
	$(genLib)\checkSum.$O \
	$(genLib)\ulCp.$O \
	$(genLib)\genMath.$O \
	$(genLib)\endLine.h
		$(CC) /Fo:$(genLib)\inflate.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\inflate.c

$(genLib)\checkSum.$O: \
	$(genLib)\checkSum.c \
	$(genLib)\checkSum.h \
	$(genLib)\endin.$O
	$(CC) /Fo:$(genLib)\checkSum.$O \
		$(CFLAGS) $(coreCFLAGS) \
		$(genLib)\checkSum.c

$(genLib)\endin.$O: \
	$(genLib)\endin.c \
	$(genLib)\endin.h
		$(CC) /Fo:$(genLib)\endin.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\endin.c

$(genLib)\genMath.$O: \
	$(genLib)\genMath.c \
	$(genLib)\genMath.h
		$(CC) /Fo:$(genLib)\genMath.$O \
			$(CFLAGS) $(coreCFLAGS) \
			$(genLib)\genMath.c

install:
	move $(NAME) $(PREFIX)

clean:
	del $(objFiles)
